<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.reading.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.edu.reading.model.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="gendar" jdbcType="VARCHAR" property="gendar" />
    <result column="motto" jdbcType="VARCHAR" property="motto" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="study_level" jdbcType="INTEGER" property="studyLevel" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="school_id" jdbcType="BIGINT" property="schoolId" />
    <result column="class_id" jdbcType="BIGINT" property="classId" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, openid, nickname, name, avatar, gendar, motto, score, study_level, type, school_id, 
    class_id, create_user, create_date, update_user, update_date
  </sql>
  <select id="selectByExample" parameterType="com.edu.reading.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.edu.reading.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edu.reading.model.User">
    insert into user (id, openid, nickname, 
      name, avatar, gendar, 
      motto, score, study_level, 
      type, school_id, class_id, 
      create_user, create_date, update_user, 
      update_date)
    values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{gendar,jdbcType=VARCHAR}, 
      #{motto,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, #{studyLevel,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{schoolId,jdbcType=BIGINT}, #{classId,jdbcType=BIGINT}, 
      #{createUser,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.edu.reading.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="gendar != null">
        gendar,
      </if>
      <if test="motto != null">
        motto,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="studyLevel != null">
        study_level,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="gendar != null">
        #{gendar,jdbcType=VARCHAR},
      </if>
      <if test="motto != null">
        #{motto,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="studyLevel != null">
        #{studyLevel,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edu.reading.model.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.gendar != null">
        gendar = #{record.gendar,jdbcType=VARCHAR},
      </if>
      <if test="record.motto != null">
        motto = #{record.motto,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.studyLevel != null">
        study_level = #{record.studyLevel,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=BIGINT},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      openid = #{record.openid,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      gendar = #{record.gendar,jdbcType=VARCHAR},
      motto = #{record.motto,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      study_level = #{record.studyLevel,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      school_id = #{record.schoolId,jdbcType=BIGINT},
      class_id = #{record.classId,jdbcType=BIGINT},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.edu.reading.model.User">
    update user
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="gendar != null">
        gendar = #{gendar,jdbcType=VARCHAR},
      </if>
      <if test="motto != null">
        motto = #{motto,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="studyLevel != null">
        study_level = #{studyLevel,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edu.reading.model.User">
    update user
    set openid = #{openid,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      gendar = #{gendar,jdbcType=VARCHAR},
      motto = #{motto,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      study_level = #{studyLevel,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      school_id = #{schoolId,jdbcType=BIGINT},
      class_id = #{classId,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>