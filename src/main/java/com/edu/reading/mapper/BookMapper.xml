<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.reading.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="com.edu.reading.model.Book">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="audio" jdbcType="VARCHAR" property="audio" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="school_id" jdbcType="BIGINT" property="schoolId" />
    <result column="class_id" jdbcType="BIGINT" property="classId" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="term" jdbcType="INTEGER" property="term" />
    <result column="published" jdbcType="INTEGER" property="published" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.edu.reading.model.Book">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, publisher, unit, title, pic, audio, user_id, school_id, class_id, grade, term, 
    published, create_user, create_date, update_user, update_date
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.edu.reading.model.BookExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.edu.reading.model.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.edu.reading.model.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edu.reading.model.Book">
    insert into book (id, publisher, unit, 
      title, pic, audio, 
      user_id, school_id, class_id, 
      grade, term, published, 
      create_user, create_date, update_user, 
      update_date, content)
    values (#{id,jdbcType=BIGINT}, #{publisher,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{audio,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT}, #{schoolId,jdbcType=BIGINT}, #{classId,jdbcType=BIGINT}, 
      #{grade,jdbcType=VARCHAR}, #{term,jdbcType=INTEGER}, #{published,jdbcType=INTEGER}, 
      #{createUser,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.edu.reading.model.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="audio != null">
        audio,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="term != null">
        term,
      </if>
      <if test="published != null">
        published,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="audio != null">
        #{audio,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=BIGINT},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        #{term,jdbcType=INTEGER},
      </if>
      <if test="published != null">
        #{published,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edu.reading.model.BookExample" resultType="java.lang.Integer">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.publisher != null">
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.audio != null">
        audio = #{record.audio,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=BIGINT},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=BIGINT},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.term != null">
        term = #{record.term,jdbcType=INTEGER},
      </if>
      <if test="record.published != null">
        published = #{record.published,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update book
    set id = #{record.id,jdbcType=BIGINT},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      audio = #{record.audio,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      school_id = #{record.schoolId,jdbcType=BIGINT},
      class_id = #{record.classId,jdbcType=BIGINT},
      grade = #{record.grade,jdbcType=VARCHAR},
      term = #{record.term,jdbcType=INTEGER},
      published = #{record.published,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set id = #{record.id,jdbcType=BIGINT},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      audio = #{record.audio,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      school_id = #{record.schoolId,jdbcType=BIGINT},
      class_id = #{record.classId,jdbcType=BIGINT},
      grade = #{record.grade,jdbcType=VARCHAR},
      term = #{record.term,jdbcType=INTEGER},
      published = #{record.published,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.edu.reading.model.Book">
    update book
    <set>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="audio != null">
        audio = #{audio,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=BIGINT},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        term = #{term,jdbcType=INTEGER},
      </if>
      <if test="published != null">
        published = #{published,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.edu.reading.model.Book">
    update book
    set publisher = #{publisher,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      audio = #{audio,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      school_id = #{schoolId,jdbcType=BIGINT},
      class_id = #{classId,jdbcType=BIGINT},
      grade = #{grade,jdbcType=VARCHAR},
      term = #{term,jdbcType=INTEGER},
      published = #{published,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edu.reading.model.Book">
    update book
    set publisher = #{publisher,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      audio = #{audio,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      school_id = #{schoolId,jdbcType=BIGINT},
      class_id = #{classId,jdbcType=BIGINT},
      grade = #{grade,jdbcType=VARCHAR},
      term = #{term,jdbcType=INTEGER},
      published = #{published,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>